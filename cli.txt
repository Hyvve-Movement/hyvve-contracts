# Campaign Management
npx ts-node scripts/cli/campaign/create_campaign.ts
npx ts-node scripts/cli/campaign/list_active_campaigns.ts

# Contribution Management
npx ts-node scripts/cli/contribution/submit_contribution.ts <campaign_id> <data_url> <quality_score>
npx ts-node scripts/cli/contribution/get_contributions.ts [campaign_id] [contributor_address]

# Campaign Statistics
npx ts-node scripts/cli/stats/activity.ts [address]
npx ts-node scripts/cli/stats/check_address_stats.ts [address]

# Verifier Management
npx ts-node scripts/cli/verifier/register_verifier.ts
npx ts-node scripts/cli/verifier/register_verifier_key.ts
npx ts-node scripts/cli/verifier/check_verifier.ts

# Setup and Initialization
npx ts-node scripts/setup/initialize_verifier.ts
npx ts-node scripts/setup/subscription.ts

# Reputation Management
npx ts-node scripts/cli/reputation/get_reputation.ts

# Profile Management
npx ts-node scripts/cli/profile/manage_profile.ts set <username>
npx ts-node scripts/cli/profile/manage_profile.ts edit <username>
npx ts-node scripts/cli/profile/manage_profile.ts view [address]

# Notes:
- Parameters in <angle_brackets> are required
- Parameters in [square_brackets] are optional
- If no address is provided for stats commands, uses the account from PRIVATE_KEY in .env
- For get_contributions:
  * Provide campaign_id to view all contributions for a campaign
  * Provide contributor_address to view all contributions by an address
  * Provide both to filter contributions by campaign and contributor